# -*- python -*-

import lsst.sconsUtils
import os
import os.path
import re

dependencies = {
    "required": [],
}

class MklConfiguration(lsst.sconsUtils.ExternalConfiguration):
    def __init__(self, *args, **kwargs):
        super(MklConfiguration, self).__init__(*args, **kwargs)
        sysDir = os.getenv("MKL_SYSTEM_DIR")
        sysLibs = os.getenv("MKL_SYSTEM_LIBS")
        if sysDir is None or sysLibs is None:
            raise RuntimeError("MKL_SYSTEM_DIR and MKL_SYSTEM_LIBS not set")
        self.paths["CPPPATH"] = [ os.path.join(sysDir, 'include'),
                                  os.path.join(sysDir, 'include', 'mkl')
                                      ]
        self.paths["LIBPATH"] = re.split(":", sysLibs)

config = MklConfiguration(
    __file__,
    headers=["mkl_lapack.h"],
    libs=['mkl_intel_lp64', 'mkl_intel_thread', 'mkl_core', 'iomp5', 'pthread'],
#   libs=['mkl_solver_lp64', 'mkl_intel_lp64', 'mkl_intel_thread', 'mkl_core', 'iomp5', 'pthread'],
)

